1.react basics,rendering
2.JSX
3.PROPS&PROPTYPES


-----------------------KUTTY PROJECTS-----------------------------
PROFILE CARD      \/
QR COD EGENERATOR \/
REACT FORM        \/
ADVICE APP        \/
BMI CAL           \/
CURR CONVERTER    \/
DIG CLOCK         \/
PASS GENERATOR    \/
FAQ ACCORDIN      \/
QUIZ APP          \/
FILTERABLE TABLE  \/
TOAST NOTIFICATION \/
PROGRESS BAR     
COLOR PICKER
WEATHER APP        \/
RANDOM QUOTE GENERATOR 
CALENDER          \/

----------------------HOOKS-------------------------------------
USESTATE         \/
USEEFFECT        \/

useeffect(fun(){}) //normalaa elomm changes layu render aagum
useeffect (fun(){},[]) //first mount la matum render aagum
useefce(fun(){},[var]) //particular variable change aana matum render aagum

useeffect(fun(){ return <cleaneup code> }) //normalaa elomm changes layu render+cleanp aagum
useeffect (fun(){ return <cleaneup code> },[]) //first mount la matum render+cleanup aagum
useefce(fun(){ return <cleaneup code> },[var]) //particular variable change aana matum render+cleanup aagum

note: cleanup unmount aagumpodhu matumee work aagum

USEREF           \/
variabla manage panaa, use pnadrom, whole component affect pannama

=>particula variableaa madify use panlaam
=> dom properties a koda access panlam



USEREDUCER       \/
      const [tasks,dispatch]=useReducer(reducer,initialstate) 

      tasks=>actual datava hold panirukum
      dispatch() => idhavachu dhaa tasks oda stata changepanamudyu, idhu argsa directaa reducer ku call panirukum
      function reducer(state,action){} 
      // actualla reduce la return pani dhaa tasks oda statea change panmudyum
      //state arg=> andha tasksa hold panirukum
      //action arg=> dipactch enna pass panucho adha hold panitukum



USEMEMO 
USEMEMO & CALLBACK

USECONTEXT:      \/
What is useContext?

 useContext is a React hook for accessing shared values across components
 without manually passing props through each level.
 
 # Create a Context
import {createContext} from 'react';

export const cartContext= createContext();

 # Provide the Context
<cartContext.Provider value={value}>

 <child/>
 <child/>
<child/>

 </cartContext.Provider>


# Consume the Context
import { cartContext } from "./cartContext";
 const { cart } = useContext(cartContext);


---------------------KOMJAM PERIYA PROJECTS--------------------------------
SHOPPING CART (2) \/         
MOVIE-APP
TODOLIST WITH LOCALSTORAGE  \/

--------------------OTHER COMPONENTS--------------------------
PAGINATION
REACT-ROUTER:
browserrouter => old method , just link+eoute vachi use panlaam
cretebrowserrouter =>modern +simple method

outlet=>route oda child automaticaa root la laod agidum
usenavigate()= >vachi endha endha route venalum, programaticalla polam,even button,div ku la kooda use pani, specifi routeku polam
useloader=>   particylar route oda loader function return pandra valueaa eduthuklaam
useRouteerror => particular route la enna error vardho aadha edukulaam




TANSTACK
SIMPLE PAGINATION

--------------------REAL TIME PROJECTS--------------------
CRUD APPLICATION(2)
FILE UPLOAD APPLICATION
FILE UPLOAD APP
MODERN NOTE TAKING APP WITH REACT,NODE,MYSQL

--------------------DEPLOYMONET---------------------
SIMPLE DEPLOYMENT & MANAGEMENT